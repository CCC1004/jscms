<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- ======================   缓存   ======================= -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<bean id="cacheConfig"
				class="qlight.util.applicationContext.MyResource"
				singleton="false">
				<constructor-arg index="0"
					value="/WEB-INF/config/cache/ehcache.xml">
				</constructor-arg>
				<!-- 该路径是相对于WebRoot目录 -->
			</bean>
		</property>
	</bean>
   
    <!-- find/create cache拦截器   
    <bean id="methodCacheInterceptor" class="qlight.frames.base.cache.MethodCacheInterceptor">    
      <property name="cache">    
        <ref local="codeCache" />    
      </property>    
    </bean>    
    -->  
    <!-- flush cache拦截器    
    <bean id="methodCacheAfterAdvice" class="qlight.frames.base.cache.MethodCacheAfterAdvice">    
      <property name="cache">    
        <ref local="codeCache" />    
      </property>    
    </bean>    
         
    <bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">    
      <property name="advice">    
        <ref local="methodCacheInterceptor"/>    
      </property>    
      <property name="patterns">    
        <list>    
            <value>.*find.*</value>    
            <value>.*get.*</value>   
            <value>.*list.*</value>   
            <value>.*page.*</value>    
        </list>    
      </property>    
    </bean>    
    
    <bean id="methodCachePointCutAdvice" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">    
      <property name="advice">    
        <ref local="methodCacheAfterAdvice"/>    
      </property>    
      <property name="patterns">    
        <list>    
          <value>.*create.*</value>    
          <value>.*update.*</value>    
          <value>.*delete.*</value>    
        </list>    
      </property>    
    </bean>    
    
    <bean id="codeServiceTarget" class="qlight.frames.code.service.CodeServiceImpl">
    </bean>    
       
    <bean id="codeService" class="org.springframework.aop.framework.ProxyFactoryBean">    
      <property name="target">    
          <ref local="codeServiceTarget"/>    
      </property>    
      <property name="interceptorNames">    
        <list>    
          <value>methodCachePointCut</value>    
          <value>methodCachePointCutAdvice</value>    
        </list>    
      </property>    
    </bean>    
    --> 
    
	<!-- 定义ehCache的工厂，并设置所使用的Cache name -->    
    <bean id="codeCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">    
      <property name="cacheManager">    
        <ref local="cacheManager"/>    
      </property>    
      <property name="cacheName">    
          <value>codeCache</value>    
      </property>    
    </bean>    
    
	<bean id="tableXMLCache"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager" />
		</property>
		<property name="cacheName">
			<value>tableXMLCache</value>
		</property>
	</bean>

	<bean id="userCacheBackend"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="cacheName" value="userCache"></property>
	</bean>
	<bean id="uploadRelTablesCache"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager" />
		</property>
		<property name="cacheName">
			<value>uploadRelTablesCache</value>
		</property>
	</bean>
</beans>