<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>		   
			/WEB-INF/config/spring/applicationContext-resources.xml,
			/WEB-INF/config/spring/applicationContext-dao.xml,
			/WEB-INF/config/spring/applicationContext-service.xml,
			/WEB-INF/config/spring/applicationContext-transaction.xml,
			/WEB-INF/config/spring/applicationContext-log.xml,
			/WEB-INF/config/spring/applicationContext-action.xml,
			/WEB-INF/config/spring/applicationContext-cache.xml,
			/WEB-INF/config/spring/applicationContext-exception.xml,
			/WEB-INF/config/spring/applicationContext-quartz.xml,
			/WEB-INF/config/spring/applicationContext-mail.xml,
			/WEB-INF/config/spring/applicationContext-acegi.xml,
		</param-value>
	</context-param>
	
	<!-- 日志配置开始 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>whpk.root</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/config/log/log4j.xml</param-value>
	</context-param>
	
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<!-- 日志配置结束 -->
	

	
	<!-- 该参数用于设置Web容器对URL按哪种方式进行编码，一般为UTF-8、GBK、ISO-8859-1
		 为空时，默认为ISO-8859-1
	 -->	
	<context-param>
		<param-name>URLEncoding</param-name>
		<param-value>UTF-8</param-value>
	</context-param>	
	<listener> <!-- 用于初始化项目一些基本参数，如项目路径，URL编码方式等 -->
		<listener-class>
			qlight.frames.web.listener.ProjectInit
		</listener-class> 		
	</listener>		
	

	<!-- 用于初始化Spring容器的Listener,-->		
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class> 
	</listener>
	
		
	 <!-- 用于限制同一用户多次登录 -->
	<listener>
	  <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
	</listener>     
	<!-- add end -->

	<!-- 日志监听器 -->
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>	   
	<!-- 
	<servlet>
	
	重写log4j加载，直接采用spring加载，在weblogic下冲突 
	<servlet-name>log4jConfigListener</servlet-name>
		<servlet-class>qlight.frames.web.servlet.Log4JInit</servlet-class>
		<init-param>   
            <param-name>log4j-config-file</param-name>   
            <param-value>/WEB-INF/config/log/log4j.xml</param-value>
        </init-param>  
		<load-on-startup>1</load-on-startup>
	</servlet>
-->
	<!-- 配置一下Spring的编码过滤器 -->   
	<filter>   
	  <filter-name>spring2encoding</filter-name>   
	  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>   
	  <init-param>   
	   <param-name>encoding</param-name>   
	   <param-value>UTF-8</param-value>   
	  </init-param>   
	  <init-param>   
	   <param-name>forceEncoding</param-name>   
	   <param-value>true</param-value>   
	  </init-param>   
	</filter> 
	 
	<filter-mapping>   
	  <filter-name>spring2encoding</filter-name>   
	  <url-pattern>/*</url-pattern>   
	</filter-mapping>  	 
	
	
	
	
	<!-- SpringSecurity权限过滤器-->
	<filter>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
    <!-- add end -->
    
    <filter>
		<filter-name>struts2-pf</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>struts2-pf</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	
	
    <!-- 把当前用户信息通过过滤器存入到MDC，注意：必需放在Struts2前面 -->
	<filter>
		<filter-name>Log4jMdcFilter</filter-name>
		<filter-class>
			qlight.frames.log.util.LogMdcFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>Log4jMdcFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>    

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter
		</filter-class>
	</filter>
	<!-- FilterDispatcher用来初始化struts2并且处理所有的WEB请求。 -->
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>JspSupportServlet</servlet-name>
		<servlet-class>org.apache.struts2.views.JspSupportServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<welcome-file-list>
		<welcome-file>index.qact</welcome-file>	   
	</welcome-file-list>
	
</web-app>
